theme:
  accentBg: rgb(215, 136, 53)
  accentText: rgb(191, 122, 48)
  textOnAccentColor: white

name: Shaun Keys
role: Software Engineer

contactInfo:
  - label: Email
    value: keys.shaun777@gmail.com
    href: mailto:keys.shaun777@gmail.com

links:
  - label: LinkedIn
    value: /in/shaun-keys-94b956143
    href: https://linkedin.com/in/shaun-keys-94b956143
  - label: GitHub
    value: /sploders101
    href: https://github.com/sploders101

objective: |
  To obtain a position that would allow me to use my skills for
  troubleshooting and my ability to learn and adapt to different
  technology stacks.

skills:
  - Linux
  - JavaScript
  - TypeScript
  - HTML
  - CSS/SCSS
  - Vue.JS
  - Node.JS
  - Electron (app framework)
  - Nginx
  - Docker
  - Kubernetes
  - Calico
  - Ceph
  - Go
  - Rust
  - Tauri
  - QML/QtQuick
  - Python
  - Java (working knowledge)
  - C (working knowledge)
  - Bash
  - Git
  - gRPC
  - Socket/stream Programming
  - Network administration concepts

profExperience:
  - companyName: Charter Communications
    roles:
      - title: Systems Engineer III
        startedAt: NOV 2023
        endedAt: Present
      - title: Systems Engineer II
        startedAt: JUL 2022
        endedAt: NOV 2023
    highlights: |
      * Created & maintained tools assisting in the deployment of new equipment and higher internet speeds to customers.
      * Created an in-house form framework designed to expedite development on simple and/or urgently-needed tools, allowing the creation of tools in a few hours that would ordinarily take multiple days to a week. This framework compromised on flexibility to allow us to deliver value with reasonably-good UX when it was urgently needed with less than a day of lead time.
      * Assisted in the rollout of a sister team's high availability architecture, including training & consulting on Ceph, Kubernetes, and Docker, as well as load balancing and database clustering.
      * Offered significant instruction on the fundamentals of secure coding, socket programming, Linux systems, and containers with in-depth explanations of how they work.
    description: |
      * Created intelligent text parsers in Rust & Python to report network device configurations in a normalized, easy-to-use format, reporting any inconsistencies identified during analysis. These parsers caught several potential outages and served as the basis for a significant number of tools dealing with maintenance of existing equipment, and rollout of new equipment.
      * Maintained Linux servers housing a significant number of mission-critical tools, and created a containerized environment in a new server to allow legacy codebases to run on a fundamentally different system.
      * Assisted in the training and adoption of docker containers and microservice architecture to consolidate logging & auditing, automate deployments, and create central pivot points where we can fix critical issues arising due to lack of vendor documentation which span multiple projects.
      * Created a variety of microservices handling tasks from OAuth2 authentication & JWT-based sessions to emulating human input on iCMTS CLI interfaces and parsing complicated output with little to no structure, exposing a gRPC API for the rest of our system.
      * Facilitated the migration of large amounts of undocumented code to a new system, going so far as to create my own container system based on Flatpak's Bubblewrap when Docker was not an accessible option.
        * This allowed us to keep our new environment clean and free of dirty hacks when there was no time to rewrite legacy code, while requiring documentation on all non-standard configurations.
  - companyName: Nagrastar
    roles:
      - title: Software Engineer
        startedAt: OCT 2021
        endedAt: JUL 2022
    highlights: |
      * Helped create applications for Dish set-top boxes in QML/JS. Participated in development team.
      * Fully onboarded with the team in two weeks having no prior knowledge of QML.
      * Created specialized routing solutions for QA lab to solve very unique challenges stemming from lack of access to the company network's router, isolation of different companies' networks, CI infrastructure limitations, and broadcast traffic from STBs.
    description: |
      * Wrote a working "Promise" implementation from scratch for use in an ES5 Qt environment.
      * Created data synchronization models similar to a virtual DOM that converted between QML/JS data types and allowed smooth updating of content by analyzing differences.
  - companyName: Panther Industries
    roles:
      - title: Software Engineer
        startedAt: AUG 2018
        endedAt: OCT 2021
    highlights: |
      * Created Panther Analytics as an embedded Linux system used to log and view efficiency data of Panther Industries' applicators.
      * Created ProductionHub: Panther's order tracking & productivity software.
      * Created tools to assist the sales department in advising customers how we could help.
    description: |
      * Created the codebase for Virtual System Builder, which displays an image of our system based on the requested configuration.
      * Created an automatic update payload in the form of a bootable SD card that can extract hard-coded variables from a proprietary PLC runtime using a multi-stage payload injection process and generate an update package on-demand, upgrading the software in a desired PLC.
        * This later manifested into a full-scale redesign of our software deployment strategy, and allowed me to create user-friendly software installation wizards for Wago PLCs that were previously programmed using a proprietary IDE, and deploy software installs in bulk while lowering licensing costs.
      * Created automated programming software for our motor controllers by reverse-engineering a .NET library and translating it into TypeScript to be installed into an Electron.JS program, then into Rust to be installed into an embedded Linux system for bulk installs using a wall-mounted appliance.
      * Re-implemented the CANOpen SDO and PDO protocols in Rust to integrate parts of the motor controller programming process into the PLC, allowing reconfiguration of motor controllers via the network.
  - companyName: STEM School Highlands Ranch
    roles:
      - title: IT Intern
        startedAt: Summer 2017
    description: |
      * Assisted the IT Director.
      * Automated Google domain transfer of entire student directory with JavaScript.
      * Worked with Ivanti LANDesk and assisted in provisioning teachers' computers as well as computer labs.

personalProjects:
  - title: WSLinux
    highlights: |
      WSLinux is a project I created for fun in my spare time that allows anyone to boot their computer using a web browser as their system disk.
    description: |
      To do this, I designed and built my own POSIX filesystem using web technologies, a binary remote filesystem protocol that runs on websockets, and a FUSE connector that acts as a WebSocket server. The web app running Idbfs (IndexedDB FileSystem) and Wsfs (WebSocket FileSystem [server]) then connects to the FUSE driver, and serves files over that connection.

      When combined with a proper initramfs in a UKI efi file, this can be used to bootstrap a system to allow mounting Wsfs as the root system partition during early boot. Everything seems to work well, and I have even been able to successfully boot to a graphical interface, and run Chromium in Linux, booted from Chromium.
  - title: SimplyDMX
    highlights: |
      While volunteering in production at church, I have seen a need for better DMX lighting software and have been developing new software in my spare time.
  - title: Home Lab
    highlights: |
      I maintain a homelab which allows me to try thing out and learn new technologies, including Kubernetes, Docker, Ceph, iSCSI, CI/CD, and more, and gain a deep understanding of how they work.
    description: |
      Ever since I was a kid, I have been building and administering Linux servers using various technologies such as OpenHAB, Home Assistant, media servers, Samba, Netatalk, iSCSI, Ceph, Proxmox, Docker, and many more. This is a primary source of my skills, and allows me to learn a significant number of technologies very deeply, understanding most, if not all, of the lower-level building blocks that make them work.

      Recently, I have dedicated myself to learning about high availability concepts, diving head-first into Ceph, Kubernetes, Keepalived, and many more. I have been having a particularly fun time learning the in-depth details of Kubernetes and using Calico, Rook, and MetalLB (though my current project involves migrating to kube-vip for the automated control plane redundancy).

      My cluster contains a fairly significant set of firewall rules written using NetworkPolicy ojects (both native and Calico extensions) that govern every connection made in my cluster, and adopt a block-by-default methodology. Each application gets its own namespace, and each namespace contains rules that block all cross-namespace ingress traffic, except when specified otherwise.

      I've also been learning about Prometheous, Grafana, Loki, and various other observability systems and have begun integrating them into my homelab, which has already caught several issues before they occurred.

certifications:
  - title: Python Certified Associate Programmer (PCAP)
    validStart: SEP 2023
  - title: CompTIA Linux+ Certification
    validStart: FEB 2022
    validEnd: FEB 2025
    description: |
      XK0-004 variant which was updated to include Docker & Git
  - title: W3Schools Certified JavaScript Developer
    validStart: FEB 2022
  - title: STEM School and Academy
    validStart: MAY 2018
    description: |
      Concentrated on software/web development courses. Extracurricular activities include First Robotics and Technology Student Association.
